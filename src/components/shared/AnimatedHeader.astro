---
const { text } = Astro.props;
---

<div class="border">
  <h2 class="js_animated_text">{text}</h2>
</div>

<script>
  const animatedTextArray = document.querySelectorAll(".js_animated_text");

  animatedTextArray.forEach((animatedText) => {
    // Generate the repeated word with italics
    const word = animatedText.innerHTML;
    const letters = word.split("");
    const newHTMLContent = letters
      .map((letter, index) => {
        let generatedWord = "";
        letters.forEach((char, i) => {
          if (i === index) {
            generatedWord += `<i>${char}</i>`;
          } else {
            generatedWord += char;
          }
        });
        return `<span class='generated-word'>${generatedWord}</span>`;
      })
      .join("");

    animatedText.innerHTML = newHTMLContent;

    let marginLeft = 0;
    window.addEventListener("scroll", () => {
      const section = animatedText.parentElement;
      const sectionTop = section.offsetTop;
      const sectionBottom = sectionTop + section.offsetHeight;
      const windowHeight = window.innerHeight;

      const scrollPos = window.scrollY;

      if (scrollPos + windowHeight >= sectionTop && scrollPos < sectionBottom) {
        animatedText.style.marginLeft = `${marginLeft}px`;
        marginLeft += 1; // Adjust this value to change the speed of the animation

        const words = animatedText.querySelectorAll(".generated-word");
        words.forEach((word) => {
          // if (word.getBoundingClientRect().right > window.innerWidth) {
          //   console.log(animatedText);
          //   animatedText.insertBefore(word, animatedText.firstChild);
          // }
        });
      }
    });
  });
</script>

<style lang="scss">
  .border {
    border-top: 1px solid black;
    border-bottom: 1px solid black;
    h2 {
      font-size: 10rem;

      :global(.generated-word) {
        margin: 0 1.5rem;

        :global(i) {
          margin-left: -15px;
        }
      }
    }
  }
</style>
